/**
 * Generated by `createschema ticket.TicketChange 'ticket:Relationship:Ticket:CASCADE;'`
 */

const { Relationship } = require('@keystonejs/fields')
const { GQLListSchema } = require('@core/keystone/schema')
const { uuided, tracked } = require('@core/keystone/plugins')
const { DV_FIELD } = require('@condo/domains/common/schema/fields')
const access = require('@condo/domains/ticket/access/TicketChange')
const { generateChangeTrackableFieldsFrom } = require('@condo/domains/common/utils/serverSchema/changeTrackable')
const { fieldsToTrackInTicketForChanges } = require('./Ticket')

/**
 *
 * @type {GQLListSchema}
 */
const TicketChange = new GQLListSchema('TicketChange', {
    schemaDoc: 'Incremental changes of Ticket',
    fields: {
        dv: DV_FIELD,

        ticket: {
            schemaDoc: 'Related ticket, whose change is logged in this entity',
            type: Relationship,
            ref: 'Ticket',
            isRequired: true,
            knexOptions: { isNotNullable: true }, // Required relationship only!
            kmigratorOptions: { null: false, on_delete: 'models.CASCADE' },
        },
        ...generateChangeTrackableFieldsFrom(fieldsToTrackInTicketForChanges),
    },
    plugins: [uuided(), tracked()],
    access: {
        read: access.canReadTicketChanges,
        create: access.canManageTicketChanges,
        update: false,
        delete: false,
        auth: true,
    },
})

module.exports = {
    TicketChange,
}
